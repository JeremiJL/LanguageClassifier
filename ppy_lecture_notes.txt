nonlocal - variable denoted like that is from surrounding scope
 - dont crate new variable n, take it from scope (enclosing scope)
functions can be nested
def funA:
    def funB:
        xxx

Scopes in python
block of code does not create scope
function does

scopes hierarchy:
1. local names
2. enclosing functions (nested functions scenario)
3. global (module / python file scope)
4. built in

global - look for this variable in global scope

'a' in locals()
is object with name a in local scope

--Passing arguments


* - unpacks iterable
for example :
l = [1,2,3]
print(*l) : 1 2 3
print(l) : [1, 2, 3]

/ as paramter - all parameters before slash can not be names

you can possibly write function in c and invoke them from python it is not easy
but is a common practice - u can find books about it

* - what is after the star has to be passed using the name - keyword arguments

example built in sorted fucntion signature
sorted(iterable, / , *, key=None, reverse=False)

lambdas in python - poorly implemented
lambdas - anonymous functions,
lamda args_list: expr
